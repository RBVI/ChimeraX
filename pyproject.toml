[tool.pyright]
include = ["src"]
exclude = [
    "ChimeraX.app/**"
]
ignore = [
    "src/bundles/**/build"
]
[tool.yapf]
# All changes must be PEP8 compatible
blank_line_before_nested_class_or_def=true
column_limit=95
dedent_closing_brackets=true
space_between_ending_comma_and_closing_bracket=false
[tool.yapfignore]
ignore_patterns = [
    ".venv",
    "ChimeraX.app",
    "build",
    "wheel",
    "docs",
    "prereqs",
    "src/bundles/**/build",
    "src/bundles/**/dist",
    "src/core/toolshed/unused"
]
[tool.pytest.ini_options]
addopts = "--cache-clear --verbose --order-dependencies" 
console_output_style = "count"
norecursedirs = [
    ".venv",
    "ChimeraX.app",
    "build",
    "wheel",
    "docs",
    "prereqs",
    "src/bundles/**/build",
    "src/bundles/**/dist",
    "src/core/toolshed/unused"
]
### Ignore all the flake8 rules that directly contradict how
### real life actual people write code in the real world
#flake8-ignore = [
#    # Modeller script boilerplate
#    "src/bundles/modeller/src/script_head.py ALL",
#    "src/bundles/modeller/src/script_tail.py ALL",
#    # Imported but unused, star import, entity referenced after star
#    "**/__init__.py F401 F403 F405",
#    # Overhangig indent
#    "E121",
#    # Underhanging indent
#    "E126",
#    # Mandates no whitespace before comma, which is sensible, but
#    # just as it's better to have all operators aligned, it's better
#    # to have all commas aligned.
#    "E203",
#    # Mandates no spaces around keyword/parameter =
#    "E251",
#    # Mandates two spaces before inline comment
#    "E261",
#    # Mandates two blank lines between functions
#    "E302",
#    # Mandates blank line before inner function definition
#    "E306",
#    # Disallows Multiple imports on one line
#    "E401",
#	# Disallows long lines
#	"E501",
#    # Disallows bare except statement
#    "E722",
#    # Disallows breaking before binary operators as in Haskell
#    # This can be removed when flake8 is updated to consider
#    # breaking before a binary operator as the best practice
#    # (coming soon)
#    "W503",
#    # Disallows breaking after a binary operator
#    # This should be removed when W503 becomes the standard
#    "W504"
#]
