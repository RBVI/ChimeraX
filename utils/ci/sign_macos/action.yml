name: Sign macOS Package
description: Package ChimeraX for macOS

inputs:
  team_id:
    description: team ID of signing cert
    required: true
  app_pw:
    description: app-specific password for signing
    required: true
  provider:
    description: signing provider
    required: true
  email:
    description: apple ID to use for signing
    required: true
  kc_pw:
    description: keychain password
    required: true
  build_certificate:
    description: base64 encoded signing certificate
    required: true
  p12_pw:
    description: signing certificate password
    required: true
  build_profile:
    description: base64 encoded signing profile
    required: true

runs:
  using: "composite"
  steps:
    - name: Mask input parameters
      shell: bash
      run: |
        export MAC_SIGNING_TEAM_ID=${{ inputs.team_id }}
        export MAC_SIGNING_APP_PW=${{ inputs.app_pw }}
        export MAC_SIGNING_PROVIDER=${{ inputs.provider }}
        export MAC_SIGNING_EMAIL=${{ inputs.email }}
        export MAC_SIGNING_KEYCHAIN_PW=${{ inputs.kc_pw }}
        export MAC_SIGNING_BUILD_CERTIFICATE=${{ inputs.build_certificate }}
        export MAC_SIGNING_P12_PW=${{ inputs.p12_pw }}
        export MAC_SIGNING_PROVISIONING_PROFILE=${{ inputs.build_profile }}
        echo "::add-mask::$MAC_SIGNING_TEAM_ID"
        echo "::add-mask::$MAC_SIGNING_APP_PW"
        echo "::add-mask::$MAC_SIGNING_PROVIDER"
        echo "::add-mask::$MAC_SIGNING_EMAIL"
        echo "::add-mask::$MAC_SIGNING_KEYCHAIN_PW"
        echo "::add-mask::$MAC_SIGNING_BUILD_CERTIFICATE"
        echo "::add-mask::$MAC_SIGNING_P12_PW"
        echo "::add-mask::$MAC_SIGNING_PROVISIONING_PROFILE"
        echo MAC_SIGNING_TEAM_ID=$MAC_SIGNING_TEAM_ID >> $GITHUB_ENV
        echo MAC_SIGNING_APP_PW=$MAC_SIGNING_APP_PW >> $GITHUB_ENV
        echo MAC_SIGNING_PROVIDER=$MAC_SIGNING_PROVIDER >> $GITHUB_ENV
        echo MAC_SIGNING_EMAIL=$MAC_SIGNING_EMAIL >> $GITHUB_ENV
        echo MAC_SIGNING_KEYCHAIN_PW=$MAC_SIGNING_KEYCHAIN_PW >> $GITHUB_ENV
        echo MAC_SIGNING_BUILD_CERTIFICATE=$MAC_SIGNING_BUILD_CERTIFICATE >> $GITHUB_ENV
        echo MAC_SIGNING_P12_PW=$MAC_SIGNING_P12_PW >> $GITHUB_ENV
        echo MAC_SIGNING_PROVISIONING_PROFILE=$MAC_SIGNING_PROVISIONING_PROFILE >> $GITHUB_ENV

    - name: Install the Apple certificate and provisioning profile
      shell: bash
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$MAC_SIGNING_BUILD_CERTIFICATE" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$MAC_SIGNING_PROVISIONING_PROFILE" | base64 --decode -o $PP_PATH

        # create temporary keychain
        security create-keychain -p "$MAC_SIGNING_KEYCHAIN_PW" $KEYCHAIN_PATH 1>/dev/null 2>/dev/null
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH 1>/dev/null 2>/dev/null
        security unlock-keychain -p "$MAC_SIGNING_KEYCHAIN_PW" $KEYCHAIN_PATH 1>/dev/null 2>/dev/null

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$MAC_SIGNING_P12_PW" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH 1>/dev/null 2>/dev/null
        security set-key-partition-list -S apple-tool:,apple: -k "$MAC_SIGNING_KEYCHAIN_PW" $KEYCHAIN_PATH 1>/dev/null 2>/dev/null
        security list-keychain -d user -s $KEYCHAIN_PATH 1>/dev/null 2>/dev/null

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Sign the application
      shell: bash
      run: |
        /usr/local/bin/python3 -m pip install lief dmgbuild
        /usr/local/bin/python3 utils/build/macos/notarize.py everything \
        -a ChimeraX.app \
        -d ChimeraX.dmg \
        -T $MAC_SIGNING_TEAM_ID \
        -s $MAC_SIGNING_TEAM_ID \
        -p $MAC_SIGNING_APP_PW \
        -P $MAC_SIGNING_PROVIDER \
        -i $MAC_SIGNING_EMAIL \
        -k $RUNNER_TEMP/app-signing.keychain-db \
        -K $MAC_SIGNING_KEYCHAIN_PW \
        -v -v -v
