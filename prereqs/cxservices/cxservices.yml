openapi: '3.0.2'
# vim: sw=2 et sts=2:

# This is the proposed OpenAPI specification for
# REST-based ChimeraX services.  The design is a
# combination of the Opal Toolkit API used in
# Chimera and the REST interface for PDB2PQR/APBS
# web server (http://server.poissonboltzmann.org)
# in Nathan Baker's lab at PNNL.
#
# The expected workflow is:
#
# Client          Server
# ------          ------
# Request to start a new job
#                 Return a job identifier to be used in all job-related requests
# Upload all input files, either in a zip archive or individually
#                 Allocate storage and save input files
# Submit job, specifying which service and all relevant parameters
#                 Launch job on server
# Query for job status until job either completes or fails
#                 Return job status when queried
# Fetch files, either in a zip archive or individually
#                 Return file names and contents of files
# Delete job
#                 Delete job files and release storage
#
# To simplify the API, parameters are passed either
# as part of the URL path or in the request body.
# No query parameters or cookies are used, even
# though they are supported by OpenAPI 3.
#
# To support full OpenAPI specification for individual
# services (BlastProtein, Muscle, CCD, etc.), the API
# is designed to include the service name in the URL
# path: /job/{job_id}/{service_name}.  This allows for
# explicit definitions (later) for services such as
# /job/{job_id}/blast that can completely specify the
# supported parameters in the request body.  The
# generic form can be used during development, as
# its parameters are specified as properties of a
# "free-form object": an object with arbitrary
# property/value pairs.
#
# This specification cannot be read by Python's
# openapi3 package because it does not handle
# "requestBodies" properly.  The editor at
# https://editor.swagger.io/, however, does
# validate it.
#
#
# TODO:
#   Support job cancellation?  Does that delete the job (and its files)?
#   Should service be named when creating jobs instead of later?
#   Implementation.

info:
  title: RBVI ChimeraX Web Services
  description: REST API for RBVI web services supporting ChimeraX tools
  version: '0.1'
  contact:
    name: ChimeraX Help Desk
    email: chimerax-users@cgl.ucsf.edu
    url: http://www.rbvi.ucsf.edu/chimerax/docs/contact.html
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html


externalDocs:
  description: ChimeraX
  url: http://www.rbvi.ucsf.edu/chimerax


servers:
  - url: http://webservices.rbvi.ucsf.edu/rest/api/v1
    description: Production server


paths:
  /chimerax/job_id:
    get:
      operationId: job_id
      summary: Return a new job identifier
      responses:
        '201':
          $ref: '#/components/responses/JobID'
        '500':
          $ref: '#/components/responses/ServerFailure'

  /chimerax/files_list/{job_id}:
    parameters:
      - $ref: '#/components/parameters/JobID'
    get:
      operationId: files_list
      summary: Return list of job files on server
      responses:
        '200':
          $ref: '#/components/responses/FilesList'
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'

  /chimerax/files/{job_id}:
    parameters:
      - $ref: '#/components/parameters/JobID'
    get:
      operationId: files_get
      summary: Return job files on server as zip archive
      responses:
        '200':
          $ref: '#/components/responses/FilesArchive'
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'
    post:
      operationId: files_post
      summary: Upload zip archive of job files to server
      requestBody:
        $ref: '#/components/requestBodies/UploadFilesArchive'
      responses:
        '202':
          description: Success
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'

  /chimerax/files/{job_id}/{file_name}:
    parameters:
      - $ref: '#/components/parameters/JobID'
      - $ref: '#/components/parameters/FileName'
    get:
      operationId: file_get
      summary: Return content of job file on server
      responses:
        '200':
          $ref: '#/components/responses/FileContent'
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'
    post:
      operationId: file_post
      summary: Upload job file to server
      requestBody:
        $ref: '#/components/requestBodies/UploadFile'
      responses:
        '202':
          description: Success
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'

  /chimerax/job/{job_id}:
    parameters:
      - $ref: '#/components/parameters/JobID'
    get:
      operationId: status
      summary: Return status of job
      responses:
        '200':
          $ref: '#/components/responses/JobStatus'
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'
    delete:
      operationId: job_delete
      summary: Delete job on server
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'

  /chimerax/job/{job_id}/{service_name}:
    parameters:
      - $ref: '#/components/parameters/JobID'
      - $ref: '#/components/parameters/ServiceName'
    post:
      operationId: submit
      summary: Submit a job for execution
      requestBody:
        description: Parameters for job execution
        required: true
        content:
          application/json:
            schema:
              # service-dependent parameters
              type: object
              additionalProperties: true
      responses:
        '202':
          description: Success
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'

  # XXX: paths to services with defined parameters go here

  /chimerax/job/{job_id}/sleep:
    parameters:
      - $ref: '#/components/parameters/JobID'
    post:
      operationId: sleep
      summary: Sleep for a while and exit
      requestBody:
        $ref: '#/components/requestBodies/Sleep'
      responses:
        '202':
          description: Success
        '400':
          $ref: '#/components/responses/InvalidParameters'
        '500':
          $ref: '#/components/responses/ServerFailure'


components:
  schemas:
    Error:
      type: object
      properties:
        title:
          type: string
        description:
          type: string

  parameters:
    JobID:
      in: path
      name: job_id
      description: Job identifier
      required: true
      schema:
        type: string
    FileName:
      in: path
      name: file_name
      description: File to fetch
      required: true
      schema:
        type: string
    ServiceName:
      in: path
      name: service_name
      description: Service to invoke
      required: true
      schema:
        type: string

  responses:
    JobID:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              job_id:
                type: string
    JobStatus:
      description: Status of job on server
      content:
        application/octet-stream:
          schema:
            type: object
            properties:
              status:
                type: string
                enum: [created, pending, running, complete, failed, deleted]
    FilesList:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              file_names:
                type: array
                items:
                  type: string
    FilesArchive:
      description: Success
      content:
        application/zip:
          schema:
            type: string
            format: binary
    FileContent:
      description: Success
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    ServerFailure:
      description: Server cannot process request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidParameters:
      description: Request parameters invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  requestBodies:
    UploadFilesArchive:
      description: Zip archive of files being uploaded
      required: true
      content:
        application/zip:
          schema:
            type: string
            format: binary
    UploadFile:
      description: Content of file being uploaded
      required: true
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    Sleep:
      description: Length of time to sleep
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              wait_time:
                type: integer
                format: int32
