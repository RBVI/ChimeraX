#
# This Makefile.macos is for creating the macOS Python framework.
# This is done just once, then ChimeraX builds just uses a tar file containing
# the framework.
#
# The standard Python macOS installer installs a non-relocatable framework in
# /Library/Frameworks/Python.framework.  Its module shared libraries such as ssl
# have full paths to the Python main library under /Library.  To remedy this
# Greg Neagle has a github repository that converts the Python standard distribution
# to a relocatable version.
#
#	https://github.com/gregneagle/relocatable-python
#
# Before using this Makefile need to set the Python version in chimerax/mk/config.make
# and also comment out the setting SSL_CERT_FILE in config.make.
#
# There is a Python ticket to distribute a relocatable framework for macOS
#
#	https://bugs.python.org/issue42514
#
TOP	= ../..
include $(TOP)/mk/config.make

# PYTHON_VERSION is in config.make
PYTHON_PATCH_LEVEL = $(PYTHON_VERSION).$(PYTHON_PATCH_VERSION)

DISTRIBUTION = python-$(PYTHON_PATCH_LEVEL)-mac.tar.bz2
MACOS_VER = 10.9

all : $(DISTRIBUTION)

$(DISTRIBUTION):
	# Move the user's Python directory so we can build relocatable Python cleanly
	if [ -d ~/Library/Python/$(PYTHON_VERSION)/ ]; then \
		mv ~/Library/Python/$(PYTHON_VERSION) ~/Library/Python/$(PYTHON_VERSION).backup; \
	fi
	git clone git@github.com:gregneagle/relocatable-python.git
	# Create requirements.txt to pip install certifi
	cd relocatable-python && \
	echo certifi > requirements.txt
	cd relocatable-python && \
	./make_relocatable_python_framework.py \
		   --python-version $(PYTHON_PATCH_LEVEL) \
		   --os-version $(MACOS_VER) \
		   --pip-requirements requirements.txt \
		   --upgrade-pip
	# For Python ssl to find the certifi certificates need this symbolic link
	cd relocatable-python && \
	ln -s ../../lib/python$(PYTHON_VERSION)/site-packages/certifi/cacert.pem Python.framework/Versions/$(PYTHON_VERSION)/etc/openssl/cert.pem
	cd relocatable-python && \
	tar jcf $(DISTRIBUTION) Python.framework
	mv relocatable-python/$(DISTRIBUTION) .
	# Restore the user's Python directory
	if [ -d ~/Library/Python/$(PYTHON_VERSION).backup ]; then \
		mv ~/Library/Python/$(PYTHON_VERSION).backup ~/Library/Python/$(PYTHON_VERSION); \
	fi
