To make a new version of the AlphaFold BLAST database
-----------------------------------------------------

mkdir v9
cd v9
nohup curl -s https://ftp.ebi.ac.uk/pub/databases/alphafold/sequences.fasta > alphafold.fasta &
# Wait for database download to finish, could take days.
/usr/local/bin/makeblastdb -in alphafold.fasta -dbtype prot -parse_seqids -out alphafold.fasta -title "AlphaFold DB version 9"

To make a new version of the AlphaFold kmer database
----------------------------------------------------

mkdir v9_kmer
cd v9_kmer

# If AlphaFold sequence file has single line sequences can just link to it
ln -s ../v9/alphafold.fasta .
# Otherwise convert it to single line sequences
curl -O https://raw.githubusercontent.com/RBVI/ChimeraX/develop/src/bundles/alphafold/src/kmer_search/single_line_sequences.py
python3 single_line_sequences.py < ../v9/alphafold.fasta > alphafold.fasta

curl -O https://raw.githubusercontent.com/RBVI/ChimeraX/develop/src/bundles/alphafold/src/kmer_search/kmer_search.py
nohup python3 kmer_search.py makeindex alphafold.fasta >& makeindex.out &

Notes
-----
1) The kmer_search.py Python script needs numpy installed with python (python3 -m pip install numpy).

2) The kmer_search.py script requires the fasta file to have each sequence on one line, not multiple lines.

3) The kmer_search.py script can run much faster if you compile some C code into a shared library that it
   will use if it finds it in the current directory.  Time 1.3 GB fasta becomes 6 minutes instead of 18 minutes.
   This test was on a slow network file system.  See note 4 about using an SSD drivefor ten times faster speed.
     curl -O https://raw.githubusercontent.com/RBVI/ChimeraX/develop/src/bundles/alphafold/src/kmer_search/make_kmer_index.c
   on Linux
     cc make_kmer_index.c -shared -o make_kmer_index.so -std=c99 -fPIC -O3
   on Mac
     cc make_kmer_index.c -shared -o make_kmer_index.dylib -O3

4) The kmer_search.py script will run faster with the sequence file on a fast SSD drive.
   For example on a Mac laptop with the shared library it took 30 seconds versus 6 minutes on a linux server
   with network filesystem.