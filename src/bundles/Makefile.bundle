# The "make" targets are:
# 	wheel: build a Python wheel in "dist" directory.
# 	install: build wheel (if needed) and install in ChimeraX.
# 	sync: squirrel away wheel
# 	build: make wheel and sync
# 	test: run ChimeraX
# 	debug: run ChimeraX with debugging flag set
# 	clean: remove files used in building wheel

TOP ?= ../../..
CHIMERAX_APP = $(wildcard $(TOP)/ChimeraX*.app)
SYNC_DIR = $(wildcard $(TOP)/build/sync)

# These can be overridden by bundles for customization
BUILD_ARGS ?=
INSTALL_ARGS ?=
CLEAN ?= build dist *.egg-info src/__pycache__ src/*/__pycache__
CLEAN_ALWAYS ?=

ifdef DEBUG
DEBUG_ARG += debug true
endif

# Platform-dependent settings.  Should not need fixing.
# For Windows, we assume Cygwin is being used.
OS = $(patsubst CYGWIN_NT%,CYGWIN_NT,$(shell uname -s))
ifeq ($(OS),CYGWIN_NT)
CHIMERAX_EXE = $(CHIMERAX_APP)/bin/ChimeraX-console.exe
PYMOD_EXT = pyd
endif
ifeq ($(OS),Darwin)
CHIMERAX_EXE = $(CHIMERAX_APP)/Contents/bin/ChimeraX
PYMOD_EXT = so
endif
ifeq ($(OS),Linux)
CHIMERAX_EXE = $(CHIMERAX_APP)/bin/ChimeraX
PYMOD_EXT = so
endif
RUN = $(CHIMERAX_EXE) --nogui --safemode --exit --cmd

PYSRCS = $(wildcard src/*.py)
# Some bundles (e.g. chem_group) need to add to PYSRCS
.SECONDEXPANSION:

wheel:	bundle_info.xml $$(PYSRCS)
	$(RUN) "devel build . exit true $(DEBUG_ARG) $(BUILD_ARGS)"

install app-install:	bundle_info.xml $$(PYSRCS)
	$(RUN) "devel install . user false exit true $(DEBUG_ARG) $(INSTALL_ARGS)"

sync:
ifneq (,$(wildcard dist/*-py*-none-any.whl))
	rsync -av dist/*.whl $(SYNC_DIR)/python-only
else
	rsync -av dist/*.whl $(SYNC_DIR)/binary
endif

ifdef BUILD_AND_INSTALL
INSTALL_ARGS = noDeps true
build: install
else
build: wheel
endif
	$(MAKE) sync

test:
	for t in $(wildcard cxtest*.cxc) $(wildcard cxtest*.py);\
		do $(CHIMERAX_EXE) --exit --nogui $$t;\
	done

debug:
	$(CHIMERAX_EXE) --debug

clean:
	if [ -x $(CHIMERAX_EXE) -a -e bundle_info.xml ]; then \
		$(RUN) "devel clean . exit true" ; \
	else \
		rm -rf $(CLEAN) ; \
	fi
	if [ -n "$(CLEAN_ALWAYS)" ]; then \
		rm -rf $(CLEAN_ALWAYS); \
	fi

pylint:
	$(CHIMERAX_EXE) -m flake8 $(filter %.py, $(PYSRCS))
