(* vi: set expandtab shiftwidth=4 softtabstop=4: *)

(*
 * === UCSF ChimeraX Copyright ===
# Copyright 2022 Regents of the University of California. All rights reserved.
# The ChimeraX application is provided pursuant to the ChimeraX license
# agreement, which covers academic and commercial uses. For more details, see
# <http://www.rbvi.ucsf.edu/chimerax/docs/licensing.html>
#
# This particular file is part of the ChimeraX library. You can also
# redistribute and/or modify it under the terms of the GNU Lesser General
# Public License version 2.1 as published by the Free Software Foundation.
# For more details, see
# <https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html>
#
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
# EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. ADDITIONAL LIABILITY
# LIMITATIONS ARE DESCRIBED IN THE GNU LESSER GENERAL PUBLIC LICENSE
# VERSION 2.1
#
# This notice must be embedded in or attached to all copies, including partial
# copies, of the software or any revisions or derivations thereof.
 * === UCSF ChimeraX Copyright ===
 *)

(* Remember to use left recursion when needed, not right *)

atom_specifier   = left:as_term operator:'&' right:atom_specifier
                 | left:as_term operator:'|' right:atom_specifier
                 | left:as_term
                 ;

as_term          = '(' atomspec:atom_specifier ')' [zone:zone_selector]
                 | '~' tilde:as_term [zone:zone_selector]
                 | selector:selector_name [zone:zone_selector]
                 | models:model_list
                 ;

selector_name    = name:/[a-zA-Z_][-+a-zA-Z0-9_]*/
                 ;

model_list       = { model+:model }+
                 ;

model            = exact_match:('#!'|'#') hierarchy:model_hierarchy
                   [ '##' attrs:attribute_list ]
                   [ parts:model_parts ] [ zone:zone_selector ]
                 | '##' attrs:attribute_list
                   [ parts:model_parts ] [ zone:zone_selector ]
                 | parts:model_parts [ zone:zone_selector ]
                 ;

model_hierarchy  = range_list:model_range_list
                   { /(?<!\s)\./ hierarchy:model_hierarchy }*
                 ;

model_range_list = range:model_range { ',' range_list:model_range_list }*
                 ;

model_range      = start:model_spec_start /-/ end:model_spec_end
                 | start:model_spec_any
                 ;

(* limit model numbers to 5 digits to avoid conflict with # colors *)

model_spec_any = number:model_spec
                 | word:'*'
                 ;

model_spec_start = number:model_spec
                 | word:'start'
                 | word:'*'
                 ;

model_spec_end   = number:model_spec
                 | word:'end'
                 | word:'*'
                 ;

model_spec       = number:/[0-9]{1,5}(?![0-9A-Fa-f])/
                 ;

model_parts      = { chain+:chain }+
                 ;

chain            = '/' parts:part_list [ '//' attrs:attribute_list ]
                   { residue+:residue }*
                 | '//' attrs:attribute_list { residue+:residue }*
                 | { residue+:residue }+
                 ;

residue          = ':' parts:part_list [ '::' attrs:attribute_list ]
                   { atom+:atom }*
                 | '::' attrs:attribute_list { atom+:atom }*
                 | { atom+:atom }+
                 ;

part_list        = range:part_range_list ',' part:part_list
                 | range:part_range_list 
                 ;

part_range_list  = start:/-?[a-zA-Z0-9_'"*?\[\]\\]+/
                   [ /-/ end:/[-a-zA-Z0-9_'"\\]+/ ]
                 ;

(* Atom ranges are not allowed. *)

atom             = '@' parts:atom_list [ '@@' attrs:attribute_list ]
                 | '@@' attrs:attribute_list
                 ;

atom_list        = name:atom_name ',' part:atom_list
                 | name:atom_name 
                 ;

atom_name        = name:/-?[a-zA-Z0-9_'"*?\[\]\\]+/
                 ;

attribute_list   = attr_test { ',' attr_test }*
                 ;

attr_test        = name:attr_name op:attr_operator value:attr_value
                 | name:attr_name
                 | no:'~' name:attr_name
                 ;

attr_name        = /[a-zA-Z_][a-zA-Z0-9_]*/
                 ;

attr_operator    = '>='
                 | '>'
                 | '<='
                 | '<'
                 | '=='
                 | '='
                 | '!=='
                 | '!='
                 | '<>'
                 ;

attr_value       = '"' ?/[^"]+/? '"'
                 | "'" ?/[^']+/? "'"
                 | ?/[^,#/:@ \t]+/?
                 ;

zone_selector    = zone_operator real_number
                 ;

zone_operator    = '@>'
                 | '@<'
                 | ':>'
                 | ':<'
                 | '/>'
                 | '/<'
                 | '#>'
                 | '#<'
                 ;

real_number      = /[0-9]*\.?[0-9]+/
                 ;
