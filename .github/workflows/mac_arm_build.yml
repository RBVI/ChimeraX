name: Build ChimeraX for arm64 Macs
on:
  workflow_call:
    inputs:
      release_type:
        type: string
        required: true
      branch:
        type: string
        required: false
    secrets:
      PREBUILT_CACHE_SECRET:
        required: true
      MAC_CERT_BASE64:
        required: true
      MAC_CERT_P12_PASSWD:
        required: true
      MAC_PROVISION_PROFILE_BASE64:
        required: true
      MAC_KEYCHAIN_PASSWORD:
        required: true
      MAC_NOTARIZATION_TEAM_ID:
        required: true
      MAC_NOTARIZATION_APP_PSWD:
        required: true
      MAC_NOTARIZATION_PROVIDER:
        required: true
      MAC_NOTARIZATION_EMAIL:
        required: true

jobs:
  build-arm-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'develop' }}
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - run: |
          brew install python@3.10
          python3.10 -m pip install lief dmgbuild
          patch --ignore-whitespace -d /opt/homebrew/lib/python3.10/site-packages/dmgbuild -N -p0 < ./utils/build/macos/dmgbuild.patch
      - uses: actions/checkout@v4
      - run: ${PWD}/utils/set_up_macos.sh
      - name: Fetch Plato prerequisites
        uses: ./utils/ci/consolidated_cache
        with:
          platform: macos
          architecture: arm64
          cache_key: ${{ secrets.PREBUILT_CACHE_SECRET }}
      - uses: Tiryoh/gha-jobid-action@v1
        id: get_job_id
        if: ${{ inputs.release_type == 'daily' || inputs.release_type == 'candidate' }}
        with:
          job_name: ${{ format('Build ChimeraX for arm64 macOS ({0}, {1}) / build-arm-macos', inputs.branch, inputs.release_type) }}
      - name: Note the run and job IDs on Plato
        if: ${{ inputs.release_type == 'daily' || inputs.release_type == 'candidate' }}
        uses: nick-fields/retry@v3
        with:
          # You're gonna do it until you succeed, <REDACTED>! I'm not watching one more build fail because
          # GitHub Actions couldn't contact Plato.
          max_attempts: 100000000000000000000000000000000000000000000000 
          timeout_seconds: 60
          command: ./utils/ci/nightly_logs.sh ${{ secrets.PREBUILT_CACHE_SECRET }} ${{ github.run_id }} ${{ steps.get_job_id.outputs.job_id }} mac_arm64 ${{ inputs.release_type }}
      - run: MAKEOPTS="-j$(sysctl -n hw.logicalcpu)" BUILD_TYPE="${{ inputs.release_type }}" make -j$(sysctl -n hw.logicalcpu) install-rbvi
      - name: Run the legacy test suite
        run: make test
      - name: Install Pytest
        run: USE_COVERAGE=1 make pytest-install
      - name: Set up the repo for coverage reporting
        run: make prepare-coverage
      - name: Check whether ChimeraX.exe and python -m chimerax.core are equivalent
        run: USE_COVERAGE=1 make pytest-both-exes
      - name: Run wheel tests
        run: USE_COVERAGE=1 make pytest-wheel
      - name: Run distribution tests
        run: USE_COVERAGE=1 make pytest-app
      - name: Report coverage
        run: make report-coverage
      - name: Sign the macOS package
        uses: Wandalen/wretry.action@1.2.0
        with:
          attempt_limit: 100000000000000000000000000000000000000000000000
          action: ./utils/ci/sign_macos/
          with: |
            build_certificate: ${{ secrets.MAC_CERT_BASE64 }}
            p12_pw: ${{ secrets.MAC_CERT_P12_PASSWD }}
            build_profile: ${{ secrets.MAC_PROVISION_PROFILE_BASE64 }}
            kc_pw: ${{ secrets.MAC_KEYCHAIN_PASSWORD }}
            team_id: ${{ secrets.MAC_NOTARIZATION_TEAM_ID }}
            app_pw: ${{ secrets.MAC_NOTARIZATION_APP_PSWD }}
            provider: ${{ secrets.MAC_NOTARIZATION_PROVIDER }}
            email: ${{ secrets.MAC_NOTARIZATION_EMAIL }}
            release_type: ${{ inputs.release_type }}
      - name: Upload ChimeraX
      - name: Sign the macOS package
        uses: Wandalen/wretry.action@1.2.0
        with:
          attempt_limit: 100000000000000000000000000000000000000000000000
          uses: ./utils/ci/upload_artifact
          with: |
            artifact_path: ChimeraX.dmg
            full_build: true
            release_type: ${{ inputs.release_type }}
            platform: mac_arm64
            deploy_key: ${{ secrets.PREBUILT_CACHE_SECRET }}
