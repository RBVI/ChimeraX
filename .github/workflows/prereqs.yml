name: prerequisites

on: workflow_call

jobs:
  files-changed:
    name: Detect which prerequsites had changes
    runs-on: ubuntu-20.04
    outputs:
      change_in_pyqt: ${{ steps.changes.outputs.change_in_pyqt }}
      change_in_python: ${{ steps.changes.outputs.change_in_python }}
      change_in_ambertools: ${{ steps.changes.outputs.change_in_ambertools }}
      change_in_ffmpeg: ${{ steps.changes.outputs.change_in_ffmpeg }}
      change_in_libglu: ${{ steps.changes.outputs.change_in_libglu }}
      change_in_openmm: ${{ steps.changes.outputs.change_in_openmm }}
      change_in_qtshim: ${{ steps.changes.outputs.change_in_qtshim }}
      change_in_rsync: ${{ steps.changes.outputs.change_in_rsync }}
      change_in_win32: ${{ steps.changes.outputs.change_in_win32 }}
      any_changed: ${{ steps.changes.outputs.change_in_pyqt == 'true' || steps.changes.outputs.change_in_python == 'true' || steps.changes.outputs.change_in_ambertools == 'true' || steps.changes.outputs.change_in_ffmpeg == 'true' || steps.changes.outputs.change_in_cxservicemexs == 'true' ||  steps.changes.outputs.change_in_libglu == 'true' || steps.changes.outputs.change_in_libglu == 'true' || steps.changes.outputs.change_in_openmm == 'true' || steps.changes.outputs.change_in_qtshim == 'true' || steps.changes.outputs.change_in_rsync == 'true' || steps.changes.outputs.change_in_win32 }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/prereq-file-filters.yml

  build-ubuntu:
    needs: files-changed
    if: needs.files-changed.outputs.any_changed == 'true'
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get upgrade -y && ${PWD}/utils/set_up_ubuntu.sh

      - run: make build-dirs build-app-dirs

      - name: Rebuild Python
        if: needs.files-changed.outputs.change_in_python == 'true'
        run: make -C prereqs/Python install

      - name: Rebuild Ambertools
        if: needs.files-changed.outputs.change_in_ambertools == 'true'
        run: make -C prereqs/ambertools install

      - name: Rebuild ffmpeg
        if: needs.files-changed.outputs.change_in_ffmpeg == 'true'
        run: make -C prereqs/ffmpeg install

      - name: Rebuild libglu
        if: needs.files-changed.outputs.change_in_libglu == 'true'
        run: make -C prereqs/libGLU install

      - name: Rebuild openmm
        if: needs.files-changed.outputs.change_in_openmm == 'true'
        run: make -C prereqs/openmm install

      - name: Rebuild qtshim
        if: needs.files-changed.outputs.change_in_qtshim == 'true'
        run: make -C prereqs/qtshim install

      - name: Rebuild rsync
        if: needs.files-changed.outputs.change_in_rsync == 'true'
        run: make -C prereqs/rsync install

      - name: Rebuild win32
        if: needs.files-changed.outputs.change_in_win32 == 'true'
        run: make -C prereqs/win32 install

  build-rocky8-docker:
    needs: files-changed
    if: needs.files-changed.outputs.any_changed == 'true'
    runs-on: ubuntu-20.04
    container:
      image: rockylinux:8
    env:
      SHELL: /bin/bash
      PATH: /usr/bin:/usr/sbin:/bin:/sbin
    steps:
      - run: export GIT_DISCOVERY_ACROSS_FILESYSTEMS=1
      - run: dnf update -y
      - run: dnf install -y git-all
      - uses: actions/checkout@v4
      - run: chown -R $(id -u):$(id -g) $PWD
      - run: ${PWD}/utils/set_up_centos.sh

      - run: make build-dirs build-app-dirs

      - name: Rebuild PyQt
        if: needs.files-changed.outputs.change_in_pyqt == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/pyqt install

      - name: Rebuild Python
        if: needs.files-changed.outputs.change_in_python == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/Python install

      - name: Rebuild Ambertools
        if: needs.files-changed.outputs.change_in_ambertools == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/ambertools install

      - name: Rebuild ffmpeg
        if: needs.files-changed.outputs.change_in_ffmpeg == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/ffmpeg install

      - name: Rebuild libglu
        if: needs.files-changed.outputs.change_in_libglu == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/libGLU install

      - name: Rebuild openmm
        if: needs.files-changed.outputs.change_in_openmm == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/openmm install

      - name: Rebuild qtshim
        if: needs.files-changed.outputs.change_in_qtshim == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/qtshim install

      - name: Rebuild rsync
        if: needs.files-changed.outputs.change_in_rsync == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/rsync install

      - name: Rebuild win32
        if: needs.files-changed.outputs.change_in_win32 == 'true'
        run: source /opt/rh/gcc-toolset-10/enable && make -C prereqs/win32 install

  build-macos:
    needs: files-changed
    if: needs.files-changed.outputs.any_changed == 'true'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - run: make build-dirs build-app-dirs

      - name: Rebuild PyQt
        if: needs.files-changed.outputs.change_in_pyqt == 'true'
        run: make -C prereqs/pyqt install

      - name: Rebuild Python
        if: needs.files-changed.outputs.change_in_python == 'true'
        run: make -C prereqs/Python install

      - name: Rebuild Ambertools
        if: needs.files-changed.outputs.change_in_ambertools == 'true'
        run: make -C prereqs/ambertools install

      - name: Rebuild ffmpeg
        if: needs.files-changed.outputs.change_in_ffmpeg == 'true'
        run: make -C prereqs/ffmpeg install

      - name: Rebuild libglu
        if: needs.files-changed.outputs.change_in_libglu == 'true'
        run: make -C prereqs/libGLU install

      - name: Rebuild openmm
        if: needs.files-changed.outputs.change_in_openmm == 'true'
        run: make -C prereqs/openmm install

      - name: Rebuild qtshim
        if: needs.files-changed.outputs.change_in_qtshim == 'true'
        run: make -C prereqs/qtshim install

      - name: Rebuild rsync
        if: needs.files-changed.outputs.change_in_rsync == 'true'
        run: make -C prereqs/rsync install

      - name: Rebuild win32
        if: needs.files-changed.outputs.change_in_win32 == 'true'
        run: make -C prereqs/win32 install

  build-windows:
    needs: files-changed
    if: needs.files-changed.outputs.any_changed == 'true'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-imagemagick mingw-w64-x86_64-binutils mingw-w64-x86_64-gcc mingw-w64-x86_64-gcc-objc mingw-w64-x86_64-gcc-fortran rsync patch unzip openssh make

      - run: make build-dirs build-app-dirs

      - name: Rebuild PyQt
        if: needs.files-changed.outputs.change_in_pyqt == 'true'
        run: make -C prereqs/pyqt install

      - name: Rebuild Python
        if: needs.files-changed.outputs.change_in_python == 'true'
        run: make -C prereqs/Python install

      - name: Rebuild Ambertools
        if: needs.files-changed.outputs.change_in_ambertools == 'true'
        run: make -C prereqs/ambertools install

      - name: Rebuild ffmpeg
        if: needs.files-changed.outputs.change_in_ffmpeg == 'true'
        run: make -C prereqs/ffmpeg install

      - name: Rebuild libglu
        if: needs.files-changed.outputs.change_in_libglu == 'true'
        run: make -C prereqs/libGLU install

      - name: Rebuild openmm
        if: needs.files-changed.outputs.change_in_openmm == 'true'
        run: make -C prereqs/openmm install

      - name: Rebuild qtshim
        if: needs.files-changed.outputs.change_in_qtshim == 'true'
        run: make -C prereqs/qtshim install

      - name: Rebuild rsync
        if: needs.files-changed.outputs.change_in_rsync == 'true'
        run: make -C prereqs/rsync install

      - name: Rebuild win32
        if: needs.files-changed.outputs.change_in_win32 == 'true'
        run: make -C prereqs/win32 install
