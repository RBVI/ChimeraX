name: Build ChimeraX for Rocky 8
on:
  workflow_call:
    inputs:
      release_type:
        type: string
        required: true
      branch:
        type: string
        required: false
    secrets:
      PREBUILT_CACHE_SECRET:
        required: true

jobs:
  build-rocky8-docker:
    name: Build ChimeraX for Rocky 8
    runs-on: ubuntu-20.04
    container:
      image: rockylinux:8
    env:
      SHELL: /bin/bash
      PATH: /usr/bin:/usr/sbin:/bin:/sbin
    steps:
      - run: export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
      - run: dnf update -y
      - run: dnf install -y git-all
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'develop' }}
      # buildinfo.py breaks without this
      - run: chown -R $(id -u):$(id -g) $PWD
      - run: ${PWD}/utils/set_up_centos.sh
      - name: Fetch PyQt6 and PyQt6-WebEngine from Plato
        uses: ./utils/ci/cache_pyqt
        with:
          platform: linux
          architecture: x86_64
          cache_key: ${{ secrets.PREBUILT_CACHE_SECRET }}
      - uses: ./utils/ci/cache_mmtf/
      - run: source /opt/rh/gcc-toolset-10/enable && MAKEOPTS="-j$(nproc)" make -j$(nproc) -f Makefile.centos install-rbvi
      - name: Run the legacy test suite
        run: make test
      - name: Install Pytest
        run: ./ChimeraX.app/bin/python3.11 -I -m pip install pytest pytest-cov
      - name: Set up the repo for coverage reporting
        run: make prepare-coverage
      - name: Check whether ChimeraX.exe and python -m chimerax.core are equivalent
        run: USE_COVERAGE=1 make pytest-both-exes
      - name: Run wheel tests
        run: USE_COVERAGE=1 make pytest-wheel
      - name: Run distribution tests
        run: USE_COVERAGE=1 make pytest-app
      - name: Report coverage
        run: make report-coverage
      - name: Build the Rocky 8 package
        run: make -f Makefile.centos ${{ inputs.release_type }}-package
      - run: mv rpmbuild/RPMS/x86_64/ucsf-chimerax*.rpm ./chimerax.rpm
      - name: Upload ChimeraX
        uses: ./utils/ci/upload_artifact
        with:
          artifact_path: chimerax.rpm
          full_build: true
          release_type: ${{ inputs.release_type }}
          platform: centos-8
          deploy_key: ${{ secrets.PREBUILT_CACHE_SECRET }}
      - name: Tar bundles and includes for other builds
        run: |
          export BUNDLE_REPO_DIR=$(git rev-parse --show-toplevel)/build/sync
          tar -cvzf linux-bundles.tar.gz -C $BUNDLE_REPO_DIR .
          tar -cvzf linux-include.tar.gz -C build include
      - name: Cache the bundles and includes
        uses: actions/cache/save@v4
        with:
          path: |
            linux-bundles.tar.gz
            linux-include.tar.gz
          key: linux-bundles-${{ inputs.release_type }}-${{ github.sha }}
