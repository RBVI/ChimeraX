name: Build ChimeraX for Rocky 8
on:
  workflow_call:
    inputs:
      release_type:
        type: string
        required: true
      branch:
        type: string
        required: false
    secrets:
      PREBUILT_CACHE_SECRET:
        required: true

jobs:
  build-rocky8-docker:
    name: Build ChimeraX for Rocky 8
    runs-on: ubuntu-22.04
    container:
      image: rockylinux:8
    env:
      SHELL: /bin/bash
      PATH: /usr/bin:/usr/sbin:/bin:/sbin
    steps:
      - run: export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
      - run: dnf update -y
      - run: dnf install -y git-all
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'develop' }}
      # buildinfo.py breaks without this
      - run: chown -R $(id -u):$(id -g) $PWD
      - run: ${PWD}/utils/set_up_centos.sh
      - name: Fetch Plato prerequisites
        uses: ./utils/ci/consolidated_cache
        with:
          platform: linux
          architecture: x86_64
          cache_key: ${{ secrets.PREBUILT_CACHE_SECRET }}
      - uses: Tiryoh/gha-jobid-action@v1
        id: get_job_id
        if: ${{ inputs.release_type == 'daily' || inputs.release_type == 'candidate' }}
        with:
          job_name: ${{ format('Build ChimeraX for Rocky 8 ({0}, {1}) / Build ChimeraX for Rocky 8', inputs.branch, inputs.release_type) }}
      - name: Note the run and job IDs on Plato
        if: ${{ inputs.release_type == 'daily' || inputs.release_type == 'candidate' }}
        uses: nick-fields/retry@v3
        with:
          # You're gonna do it until you succeed, <REDACTED>! I'm not watching one more build fail because
          # GitHub Actions couldn't contact Plato.
          max_attempts: 1000
          timeout_seconds: 60
          command: ./utils/ci/nightly_logs.sh ${{ secrets.PREBUILT_CACHE_SECRET }} ${{ github.run_id }} ${{ steps.get_job_id.outputs.job_id }} centos-8 ${{ inputs.release_type }}
      - run: source /opt/rh/gcc-toolset-10/enable && MAKEOPTS="-j$(nproc)" BUILD_TYPE="${{ inputs.release_type }}" make -j$(nproc) -f Makefile.centos install-rbvi
      - name: Install Pytest
        run: USE_COVERAGE=1 make pytest-install
      - name: Set up the repo for coverage reporting
        run: make prepare-coverage
      - name: Check whether ChimeraX.exe and python -m chimerax.core are equivalent
        continue-on-error: true
        id: test-exes
        run: USE_COVERAGE=1 make pytest-both-exes
      - name: Run wheel tests
        id: test-wheel
        continue-on-error: true
        run: USE_COVERAGE=1 make pytest-wheel
      - name: Run distribution tests
        id: test-distribution
        continue-on-error: true
        run: USE_COVERAGE=1 make pytest-app
      - name: Report coverage
        run: make report-coverage
      - name: Build the Rocky 8 package
        run: make -f Makefile.centos ${{ inputs.release_type }}-package
      - run: mv rpmbuild/RPMS/x86_64/ucsf-chimerax*.rpm ./chimerax.rpm
      - name: Put the build date and commit in the environment
        run: |
          export BUILD_COMMIT=$(git rev-parse --short $GITHUB_SHA)
          export BUILD_DATE=$(git show $(git rev-parse $GITHUB_SHA) --no-patch --no-notes --pretty='%cd' | date -u)
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "BUILD_COMMIT=$BUILD_COMMIT" >> $GITHUB_ENV
      - name: Upload ChimeraX
        uses: nick-fields/retry@v3
        with:
          # You're gonna do it until you succeed, <REDACTED>! I'm not watching one more build fail because
          # GitHub Actions couldn't contact Plato.
          max_attempts: 1000
          timeout_minutes: 60
          command: curl -v -F "key=${{ secrets.PREBUILT_CACHE_SECRET }}" -F "commit=$BUILD_COMMIT" -F "date=$BUILD_DATE" -F "platform=centos-8" -F "build_type=${{ inputs.release_type }}" -F "file=@$GITHUB_WORKSPACE/chimerax.rpm" https://preview.rbvi.ucsf.edu/chimerax/cgi-bin/upload_build.py
      - name: Tar the docs directory
        run: |
          cp -r ChimeraX.app/share/docs chimerax-docs
          cp -r src/bundles/viewdockx/src/docs/user/commands/* chimerax-docs/user/commands/
          cp -r src/bundles/viewdockx/src/docs/user/tools/* chimerax-docs/user/tools/
          cp -r src/bundles/phenix_ui/src/docs/user/commands/* chimerax-docs/user/commands/
          cp -r src/bundles/phenix_ui/src/docs/user/tools/* chimerax-docs/user/tools/
          cp -r src/bundles/toolshed_utils/src/docs/user/tools/* chimerax-docs/user/tools/
          cp -r src/bundles/linux_support/src/docs/user/commands/* chimerax-docs/user/commands/
          tar -cvzf chimerax-docs.tar.gz -C chimerax-docs/ .
      - name: Upload the documentation
        if: ${{ inputs.release_type == 'daily' || inputs.release_type == 'candidate' }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: 1000
          timeout_seconds: 60
          command: curl -v -F "key=${{ secrets.PREBUILT_CACHE_SECRET }}" -F "file=@$GITHUB_WORKSPACE/chimerax-docs.tar.gz" https://preview.rbvi.ucsf.edu/chimerax/cgi-bin/upload_docs.py
      - name: Tar bundles and includes for other builds
        run: |
          export BUNDLE_REPO_DIR=$(git rev-parse --show-toplevel)/build/sync
          tar -cvzf linux-bundles.tar.gz -C $BUNDLE_REPO_DIR .
          tar -cvzf linux-include.tar.gz -C build include
      - name: Cache the bundles and includes
        uses: actions/cache/save@v4
        with:
          path: |
            linux-bundles.tar.gz
            linux-include.tar.gz
          key: linux-bundles-${{ inputs.release_type }}-${{ github.sha }}
