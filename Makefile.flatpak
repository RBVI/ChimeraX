APPNAME = edu.ucsf.rbvi.ChimeraX
BUILD_DIR = fp-build.tmp
RUNTIME_VER = 23.08
BRANCH = $(shell \
    branch=$$(awk '$$1 == "branch:" { print $$2; exit } { exit }' last-commit 2> /dev/null) ; \
    if [ -z "$$branch" ]; then branch=$$(git branch --show-current); fi ; \
    if [ -z "$$branch" ]; then branch=develop; fi ; \
    echo $$branch )
COMMIT=$(shell \
    (awk '$$1 == "commit" { print $$2; exit } { exit 3 }' last-commit 2> /dev/null) \
    || (git show --summary --format=%H | head -1))
SRC_DIR = $(shell pwd -P)
ifeq ($(BUILD_TYPE),daily)
APPNAME := ${APPNAME}-daily
else ifeq ($(BUILD_TYPE),techpreview)
APPNAME := ${APPNAME}-techpreview
endif

all:
	# by default, do nothing

preqreqs-rhel:
	dnf install flatpak flatpak-builder

prereqs-ubuntu:
	apt install flatpak flatpak-builder gnome-software-plugin-flatpak

prereqs-flatpak:
	flatpak install -y org.freedesktop.Sdk//${RUNTIME_VER} org.freedesktop.Platform//${RUNTIME_VER}

build-flatpak: ${APPNAME}.yaml
	flatpak-builder --force-clean ${BUILD_DIR} ${APPNAME}.yaml

flatpak-prereq:
	flatpak install flathub org.freedesktop.Platform//${RUNTIME_VER} org.freedesktop.Sdk//${RUNTIME_VER}

prereqs:
	# normally the wheels and include directories are created by the build_tools process
	$(MAKE) -C prereqs install NO_PREBUILT=1 FLATPAK_DIST=${RUNTIME_VER} BUILD_TYPE=${BUILD_TYPE}
	$(MAKE) -C prereqs app-install NO_PREBUILT=1 FLATPAK_DIST=${RUNTIME_VER} BUILD_TYPE=${BUILD_TYPE}
	$(MAKE) -C src/apps/ChimeraX install FLATPAK_DIST=${RUNTIME_VER} BUILD_TYPE=${BUILD_TYPE}
	$(MAKE) -C src/bundles install FLATPAK_DIST=${RUNTIME_VER} BUILD_TYPE=${BUILD_TYPE}
	rm -rf wheels include
	mv build/sync wheels
	mv build/include .

${APPNAME}.yaml: flatpak-app.yaml.in
	sed -e 's:APPNAME:${APPNAME}:' -e 's:RUNTIME_VER:${RUNTIME_VER}:' -e 's:BRANCH:${BRANCH}:' -e 's:COMMIT:${COMMIT}:' -e 's:BUILD_TYPE:BUILD_TYPE=${BUILD_TYPE}:' $< > $@ || rm $@

clean:
	rm -f ${APPNAME}.metainfo.xml ${APPNAME}.desktop ${APPNAME}.yaml
	rm -rf ${BUILD_DIR} .flatpak-builder

install:
	# this is called indirectly by flatpak-builder via yaml/json manifest
	mkdir -p /app
	$(MAKE) -C prereqs install NO_PREBUILT=1 FLATPAK_DIST=${RUNTIME_VER} FLATPAK_APPNAME=${APPNAME}
	$(MAKE) -C prereqs app-install NO_PREBUILT=1 FLATPAK_DIST=${RUNTIME_VER} FLATPAK_APPNAME=${APPNAME}
	$(MAKE) -C src/apps/ChimeraX install FLATPAK_DIST=${RUNTIME_VER} FLATPAK_APPNAME=${APPNAME} BUILD_TYPE=${BUILD_TYPE}
	# create wheels and include directories
	curl https://cxtoolshed.rbvi.ucsf.edu/prereqs/linux-shared/${BUILD_TYPE}.tar.bz2 | tar jxf -
	cp -rp include /app
	/app/bin/python3.* -m pip install wheels/*.whl
	$(MAKE) -C src/apps install FLATPAK_DIST=${RUNTIME_VER} BUILD_TYPE=${BUILD_TYPE}
	$(MAKE) -C docs install FLATPAK_DIST=${RUNTIME_VER} BUILD_TYPE=${BUILD_TYPE}
	/app/bin/ChimeraX --nogui --exit --cmd "linux flatpak-files ${APPNAME}"
	install -Dm644 -t /app/share/metainfo ${APPNAME}.metainfo.xml
	install -Dm644 -t /app/share/applications ${APPNAME}.desktop

user-install: ${APPNAME}.yaml
	# assume it has been built already
	flatpak-builder --export-only --user --install ${BUILD_DIR} ${APPNAME}.yaml

system-install: ${APPNAME}.yaml
	# assume it has been built already
	flatpak-builder --export-only --system --install ${BUILD_DIR} ${APPNAME}.yaml

export-flatpak:
	# Create a single file, ChimeraX.flatpak, that can be installed 
	flatpak build-export export ${BUILD_DIR}
	flatpak build-bundle export ChimeraX.flatpak ${APPNAME}

run:
	flatpak run ${APPNAME}

explore:
	flatpak run --command=sh ${APPNAME}

explore-dev:
	flatpak run -d --command=sh ${APPNAME}

explore-sdk: ${APPNAME}.yaml
	flatpak run $(shell grep ^sdk ${APPNAME}.yaml | cut -d ' ' -s -f 2)

validate-metainfo:
	appstream-util validate-relax ${APPNAME}.metainfo.xml
